import com.att.nccicd.config.conf as config
conf = new config(env).CONF

DOCKER_REGISTRY = "${ARTF_SECURE_DOCKER_URL}"
Ubuntu_Repo = "${ARTF_UBUNTU_REPO}"
IMAGE_TAG = "${IMAGETAG}"
VERSION = 1.0

currentBuild.displayName = "#${BUILD_NUMBER} Build on ${BUILD_TIMESTAMP}"

vm2() {
    cleanWs()
    sh ('hostname')
    stage('Setup environment') {
        sh "sudo apt-get update"
        sh "sudo apt-get install -y multistrap"
    }
    stage('Build') {
sh """cat << EOF | sudo tee ~/xenial.conf
[General]
arch=amd64
directory=ubuntu_xenial
cleanup=true
noauth=false
explicitsuite=false
unpack=true
bootstrap=xenial xenial-updates xenial-security

[xenial]
packages=apt
source=https://artifacts-nc.auk3.cci.att.com/artifactory/archive-ubuntu
suite=xenial
components=main multiverse restricted universe

[xenial-updates]
packages=apt
source=https://artifacts-nc.auk3.cci.att.com/artifactory/archive-ubuntu
suite=xenial-updates
components=main multiverse restricted universe

[xenial-security]
packages=apt
source=https://artifacts-nc.auk3.cci.att.com/artifactory/archive-ubuntu
suite=xenial-security
components=main multiverse restricted universe
EOF"""
sh """cat << EOF | sudo tee ~/bionic.conf
[General]
arch=amd64
directory=ubuntu_bionic
cleanup=true
noauth=false
explicitsuite=false
unpack=true
bootstrap=bionic bionic-updates bionic-security

[bionic]
packages=apt
source=https://artifacts-nc.auk3.cci.att.com/artifactory/archive-ubuntu
suite=bionic
components=main multiverse restricted universe

[bionic-updates]
packages=apt
source=https://artifacts-nc.auk3.cci.att.com/artifactory/archive-ubuntu
suite=bionic-updates
components=main multiverse restricted universe

[bionic-security]
packages=apt
source=https://artifacts-nc.auk3.cci.att.com/artifactory/archive-ubuntu
suite=bionic-security
components=main multiverse restricted universe
EOF"""
        sh "sudo multistrap -f ~/${IMAGE_TAG}.conf"
        sh "sudo tar -C ubuntu_${IMAGE_TAG} -c . | sudo docker import - ubuntu:${IMAGE_TAG}"
        IMAGE = "${DOCKER_REGISTRY}/ubuntu:${IMAGE_TAG}-${BUILD_TIMESTAMP}"
        sh "sudo docker tag ubuntu:${IMAGE_TAG} ${IMAGE}"
    }
    stage('Image Publish') {
        publish.artifactory (IMAGE, "${JOB_BASE_NAME}:${IMAGE_TAG}-${BUILD_TIMESTAMP}")
    }
}
